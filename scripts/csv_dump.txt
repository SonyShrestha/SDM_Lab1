// Delete everything 
match(n) detach delete n; 


// Create node year
LOAD CSV FROM 'file:///year.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (y:year {year: toInteger(line[0])});

// Create node author
LOAD CSV FROM 'file:///authors.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (a:author {authorId: line[0], name: line[1]});


// Create node keywords
LOAD CSV FROM 'file:///keywords.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (k:keyword {keyword: line[0]});


// Create node journal 
LOAD CSV FROM 'file:///journals.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (j:journal{name: line[0]});


// Create node conference 
LOAD CSV FROM 'file:///conferences.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (c:conference{name: line[0]});


// Create node workshop 
LOAD CSV FROM 'file:///workshops.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (w:workshop{name: line[0]});

// Create node journal paper
LOAD CSV FROM 'file:///journal_paper.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (p:paper{paperId: line[0],title: line[1],abstract: line[2], year: toInteger(line[3]),
citationCount: toInteger(line[4]),publicationDate: line[5]});


// Create node conference paper
LOAD CSV FROM 'file:///conference_paper.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (p:paper{paperId: line[0],title: line[1],abstract: line[2], year: toInteger(line[3]),
citationCount: toInteger(line[4]),publicationDate: line[5]});


// Create node workshop paper
LOAD CSV FROM 'file:///workshop_paper.csv' AS  line FIELDTERMINATOR ','
with line
skip 1
CREATE (p:paper{paperId: line[0],title: line[1],abstract: line[2], year: toInteger(line[3]),
citationCount: toInteger(line[4]),publicationDate: line[5]});




// Create Relationship (Paper -> WRITTEN_BY -> Author) [FOR JOURNAL PAPER]
LOAD CSV FROM 'file:///journal_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[8],',') AS authorIds
UNWIND authorIds AS aId
//return aId;
MERGE (a:author {authorId: aId}) 
MERGE (p)-[:WRITTEN_BY]->(a);


// Create Relationship (Paper -> WRITTEN_BY -> Author) [FOR CONFERERENCE PAPER]
LOAD CSV FROM 'file:///conference_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[8],',') AS authorIds
UNWIND authorIds AS aId
//return aId;
MERGE (a:author {authorId: aId}) 
MERGE (p)-[:WRITTEN_BY]->(a);


// Create Relationship (Paper -> WRITTEN_BY -> Author) [FOR WORKSHOP PAPER]
LOAD CSV FROM 'file:///workshop_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[8],',') AS authorIds
UNWIND authorIds AS aId
//return aId;
MERGE (a:author {authorId: aId}) 
MERGE (p)-[:WRITTEN_BY]->(a);



// Create Relationshio has keywords
// Create Relationship (Paper -> HAS_KEYWORD -> Author) [FOR JOURNAL PAPER]
LOAD CSV FROM 'file:///journal_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[6],',') AS keywords
UNWIND keywords AS kId
MERGE (k:keyword {keyword: kId}) 
MERGE (p)-[:HAS_KEYWORD]->(k);



// Create Relationship (Paper -> HAS_KEYWORD -> Author) [FOR CONFERERENCE PAPER]
LOAD CSV FROM 'file:///conference_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[6],',') AS keywords
UNWIND keywords AS kId
MERGE (k:keyword {keyword: kId}) 
MERGE (p)-[:HAS_KEYWORD]->(k);



// Create Relationship (Paper -> HAS_KEYWORD -> Author) [FOR WORKSHOP PAPER]
LOAD CSV FROM 'file:///workshop_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[6],',') AS keywords
UNWIND keywords AS kId
MERGE (k:keyword {keyword: kId}) 
MERGE (p)-[:HAS_KEYWORD]->(k);



// Create relationship Paper -> PUBLISHED_IN -> Journal
LOAD CSV FROM 'file:///journal_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],  
    p.publicationDate = line[5]
WITH p, line[7] AS journalName, line[11] as journalVolume
MERGE (j:journal {name: journalName}) 
MERGE (p)-[pin:PUBLISHED_IN]->(j)
SET pin.volume = journalVolume;



// Create relationship Paper -> PUBLISHED_IN -> Conference
LOAD CSV FROM 'file:///conference_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],  
    p.publicationDate = line[5]
WITH p, line[7] AS conferenceName, line[11] as edition
MERGE (c:conference {name: conferenceName}) 
MERGE (p)-[pin:PUBLISHED_IN]->(c)
SET pin.edition = edition;



// Create relationship Paper -> PUBLISHED_IN -> Workshop
LOAD CSV FROM 'file:///workshop_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],  
    p.publicationDate = line[5]
WITH p, line[7] AS workshopName, line[11] as edition
MERGE (w:workshop {name:  workshopName}) 
MERGE (p)-[pin:PUBLISHED_IN]->(w)
SET pin.edition = edition;


// Create Relationship Paper -> CITES -> Paper [Journal]
LOAD CSV FROM 'file:///journal_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[11],',') AS citedPaperIds
UNWIND citedPaperIds AS citedPaperId
MERGE (p1:paper {paperId:citedPaperId}) 
MERGE (p)-[:CITES]->(p1);


// Create Relationship Paper -> CITES -> Paper [Conference]
LOAD CSV FROM 'file:///conference_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[11],',') AS citedPaperIds
UNWIND citedPaperIds AS citedPaperId
MERGE (p1:paper {paperId:citedPaperId}) 
MERGE (p)-[:CITES]->(p1);



// Create Relationship Paper -> CITES -> Paper [Workshop]
LOAD CSV FROM 'file:///workshop_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[11],',') AS citedPaperIds
UNWIND citedPaperIds AS citedPaperId
MERGE (p1:paper {paperId:citedPaperId}) 
MERGE (p)-[:CITES]->(p1);



// Create Relationship (Paper -> REVIEWED_BY -> Author) [FOR JOURNAL PAPER]
LOAD CSV FROM 'file:///journal_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[12],',') AS authorIds
UNWIND authorIds AS aId
//return aId;
MERGE (a:author {authorId: aId}) 
MERGE (p)-[:REVIEWED_BY]->(a);



// Create Relationship (Paper -> REVIEWED_BY -> Author) [FOR CONFERERENCE PAPER]
LOAD CSV FROM 'file:///conference_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[13],',') AS authorIds
UNWIND authorIds AS aId
//return aId;
MERGE (a:author {authorId: aId}) 
MERGE (p)-[:REVIEWED_BY]->(a);




// Create Relationship (Paper -> REVIEWED_BY -> Author) [FOR WORKSHOP PAPER]
LOAD CSV FROM 'file:///workshop_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, split(line[13],',') AS authorIds
UNWIND authorIds AS aId
//return aId;
MERGE (a:author {authorId: aId}) 
MERGE (p)-[:REVIEWED_BY]->(a);



// Create relationship Paper -> CORRESPONDING_AUTHOR -> Author [JOURNAL]
LOAD CSV FROM 'file:///journal_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, line[10] as correnspondingAuthor
MERGE (a:author {authorId: correnspondingAuthor}) 
MERGE (p)-[:CORRESPONDING_AUTHOR]->(a);


// Create relationship Paper -> CORRESPONDING_AUTHOR -> Author [CONFERERENCE]
LOAD CSV FROM 'file:///conference_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, line[10] as correnspondingAuthor
MERGE (a:author {authorId: correnspondingAuthor}) 
MERGE (p)-[:CORRESPONDING_AUTHOR]->(a);


// Create relationship Paper -> CORRESPONDING_AUTHOR -> Author [WORKSHOP]
LOAD CSV FROM 'file:///workshop_paper.csv' AS line FIELDTERMINATOR ','
WITH line
SKIP 1
MERGE (p:paper {paperId : line[0]})
SET   
    p.title = line[1],
    p.abstract = line[2],
    p.year = line[3],
    p.citationCount = line[4],
    p.publicationDate = line[5]
WITH p, line[10] as correnspondingAuthor
MERGE (a:author {authorId: correnspondingAuthor}) 
MERGE (p)-[:CORRESPONDING_AUTHOR]->(a);